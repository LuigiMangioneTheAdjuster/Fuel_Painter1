/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.98.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

export type ColorInput = { red: BigNumberish, green: BigNumberish, blue: BigNumberish };
export type ColorOutput = { red: number, green: number, blue: number };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "[[struct Color; 8]; 8]",
      "concreteTypeId": "3a48de61bdb2bebfcd1548350165b00e27a793ef257158e59d276450f49a83ae",
      "metadataTypeId": 0
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct Color",
      "concreteTypeId": "2def45d721476f819bda2e5d5b20a54e3bb03da9d84796911086faf3fcdbff63",
      "metadataTypeId": 2
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "[_; 8]",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__array_element",
          "typeId": 1
        }
      ]
    },
    {
      "type": "[_; 8]",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__array_element",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct Color",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "red",
          "typeId": 3
        },
        {
          "name": "green",
          "typeId": 3
        },
        {
          "name": "blue",
          "typeId": 3
        }
      ]
    },
    {
      "type": "u8",
      "metadataTypeId": 3
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "get_pixels",
      "output": "3a48de61bdb2bebfcd1548350165b00e27a793ef257158e59d276450f49a83ae",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "initialize_pixels",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "is_initialized",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "row",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "col",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "color",
          "concreteTypeId": "2def45d721476f819bda2e5d5b20a54e3bb03da9d84796911086faf3fcdbff63"
        }
      ],
      "name": "paint_pixel",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "38a1b038206f348ec947ba5770c6d713148c9d8bb0b312f47acc88777da1c09d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class PainterContractInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    get_pixels: FunctionFragment;
    initialize_pixels: FunctionFragment;
    is_initialized: FunctionFragment;
    paint_pixel: FunctionFragment;
  };
}

export class PainterContract extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: PainterContractInterface;
  declare functions: {
    get_pixels: InvokeFunction<[], [[ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput], [ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput, ColorOutput]]>;
    initialize_pixels: InvokeFunction<[], void>;
    is_initialized: InvokeFunction<[], boolean>;
    paint_pixel: InvokeFunction<[row: BigNumberish, col: BigNumberish, color: ColorInput], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
